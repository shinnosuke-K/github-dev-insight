// Code generated by entc, DO NOT EDIT.

package commits

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the commits type in the database.
	Label = "commits"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGithubID holds the string denoting the github_id field in the database.
	FieldGithubID = "github_id"
	// FieldMessage holds the string denoting the message field in the database.
	FieldMessage = "message"
	// FieldCommittedAt holds the string denoting the committed_at field in the database.
	FieldCommittedAt = "committed_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgePullRequest holds the string denoting the pull_request edge name in mutations.
	EdgePullRequest = "pull_request"
	// Table holds the table name of the commits in the database.
	Table = "commits"
	// PullRequestTable is the table that holds the pull_request relation/edge.
	PullRequestTable = "commits"
	// PullRequestInverseTable is the table name for the PullRequest entity.
	// It exists in this package in order to avoid circular dependency with the "pullrequest" package.
	PullRequestInverseTable = "pull_requests"
	// PullRequestColumn is the table column denoting the pull_request relation/edge.
	PullRequestColumn = "pull_request_id"
)

// Columns holds all SQL columns for commits fields.
var Columns = []string{
	FieldID,
	FieldGithubID,
	FieldMessage,
	FieldCommittedAt,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "commits"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"pull_request_id",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// GithubIDValidator is a validator for the "github_id" field. It is called by the builders before save.
	GithubIDValidator func(string) error
	// DefaultCommittedAt holds the default value on creation for the "committed_at" field.
	DefaultCommittedAt func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
