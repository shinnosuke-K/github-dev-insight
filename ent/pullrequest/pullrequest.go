// Code generated by entc, DO NOT EDIT.

package pullrequest

import (
	"time"
)

const (
	// Label holds the string label denoting the pullrequest type in the database.
	Label = "pull_request"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRepositoryID holds the string denoting the repository_id field in the database.
	FieldRepositoryID = "repository_id"
	// FieldGithubID holds the string denoting the github_id field in the database.
	FieldGithubID = "github_id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldTotalCommits holds the string denoting the total_commits field in the database.
	FieldTotalCommits = "total_commits"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldClosedAt holds the string denoting the closed_at field in the database.
	FieldClosedAt = "closed_at"
	// FieldMergedAt holds the string denoting the merged_at field in the database.
	FieldMergedAt = "merged_at"
	// EdgeCommits holds the string denoting the commits edge name in mutations.
	EdgeCommits = "commits"
	// EdgeRepository holds the string denoting the repository edge name in mutations.
	EdgeRepository = "repository"
	// Table holds the table name of the pullrequest in the database.
	Table = "pull_requests"
	// CommitsTable is the table that holds the commits relation/edge.
	CommitsTable = "commits"
	// CommitsInverseTable is the table name for the Commits entity.
	// It exists in this package in order to avoid circular dependency with the "commits" package.
	CommitsInverseTable = "commits"
	// CommitsColumn is the table column denoting the commits relation/edge.
	CommitsColumn = "pull_request_commits"
	// RepositoryTable is the table that holds the repository relation/edge.
	RepositoryTable = "pull_requests"
	// RepositoryInverseTable is the table name for the Repository entity.
	// It exists in this package in order to avoid circular dependency with the "repository" package.
	RepositoryInverseTable = "repositories"
	// RepositoryColumn is the table column denoting the repository relation/edge.
	RepositoryColumn = "repository_pull_requests"
)

// Columns holds all SQL columns for pullrequest fields.
var Columns = []string{
	FieldID,
	FieldRepositoryID,
	FieldGithubID,
	FieldTitle,
	FieldTotalCommits,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldClosedAt,
	FieldMergedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "pull_requests"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"repository_pull_requests",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// RepositoryIDValidator is a validator for the "repository_id" field. It is called by the builders before save.
	RepositoryIDValidator func(string) error
	// GithubIDValidator is a validator for the "github_id" field. It is called by the builders before save.
	GithubIDValidator func(string) error
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// DefaultTotalCommits holds the default value on creation for the "total_commits" field.
	DefaultTotalCommits int64
	// TotalCommitsValidator is a validator for the "total_commits" field. It is called by the builders before save.
	TotalCommitsValidator func(int64) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultClosedAt holds the default value on creation for the "closed_at" field.
	DefaultClosedAt func() time.Time
	// DefaultMergedAt holds the default value on creation for the "merged_at" field.
	DefaultMergedAt func() time.Time
)
